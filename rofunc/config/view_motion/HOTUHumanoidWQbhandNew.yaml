env:
  terminationHeight: 0.5
  charHeight: 0.89

  keyBodies: [ "right_hand", "left_hand", "right_foot", "left_foot" ]
  contactBodies: [ "right_foot", "left_foot" ]
  collisionFilter: -1

  # animation files to learn from
#  motion_file: "examples/data/hotu2/20240509/all_hotu_motion.yaml"
#  motion_file: "examples/data/hotu2/20240509/Ramdom (good)_Take 2024-05-09 04.49.16 PM_optitrack2hotu.npy"
  motion_file: "examples/data/hotu2/demo_2_test_chenzui_only_optitrack2hotu.npy"

  use_extra_dof_states_motion: False

#  motion_file_asset: "mjcf/hotu/hotu_humanoid_w_qbhand_full_new.xml"
  motion_file_asset: "mjcf/hotu/hotu_humanoid.xml"

  object_motion_file:

  asset:
#    assetFileName: "mjcf/hotu/hotu_humanoid_w_qbhand_full_new.xml"
#    assetFileName: "mjcf/hotu/hotu_humanoid_w_qbhand_full_new.xml"
    assetFileName: "mjcf/hotu/hotu_humanoid.xml"

  use_object_motion: False
  object_asset:
    assetName:         # List of object names, also used for finding objects in object_motion_file, if the name is box or sphere, it will be created as a box or sphere
    assetFileName:     # List of object asset file path
    assetSize:         # List of object size, used for scaling the object and creating the box objects

task:
  wb_decompose: False  # if True, decompose the whole body into parts
  wb_decompose_parameter:
    parts: ["body"]
#    parts: [ "hands", "upper_body", "lower_body" ]
  use_synergy: False  # if True, use the synergy for the hand